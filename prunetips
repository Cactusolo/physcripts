#!/usr/bin/env python

import newick3, phylo3, numpy, sys

if len(sys.argv) < 4:
    print "usage: prunetips <namestoprunefile> <treefile> <outfile>"
    sys.exit()

badnamesfname = sys.argv[1]
badnamesfile = open(badnamesfname, "r")
badnames = [name.strip() for name in badnamesfile.readlines()]

treefname = sys.argv[2]
treefile = open(treefname, "r")
outfname = sys.argv[3]
outfile = open(outfname,"w")

for line in treefile:

    tree = newick3.parse(line)

    # prune the bad tips
    for tip in tree.leaves():

        name_ok = False

        if tip.label in badnames:
            leftlabel = tip.label
            print "removing " + leftlabel
            tip.prune()

    # remove any leftover empty tip nodes    
    for n in tree.descendants():

        nc = n
        while (not nc.istip) and len(nc.children) == 0:
            print "pruning an empty tip"
            np = nc.parent
            nc.prune()

            if np:
                # prepare for next step back
                nc = np

            # if we hit the root of the tree, move on to next descendant
            else:
                break

    # write the pruned tree
    outfile.write(newick3.to_string(tree) + ";\n")
    outfile.flush()

outfile.close()
